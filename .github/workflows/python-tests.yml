name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create MicroPython mock modules
      run: |
        mkdir -p mocks
        echo "class WLAN: pass" > mocks/network.py
        echo "class Pin: pass" > mocks/machine.py
        echo "def request(*args, **kwargs): return type('Response', (), {'text': '{}'})" > mocks/urequests.py
        echo "def dumps(obj): return str(obj)" > mocks/ujson.py
        echo "def loads(s): return eval(s)" >> mocks/ujson.py
        export PYTHONPATH=$PYTHONPATH:$(pwd)/mocks
        
    - name: Lint with pylint
      run: |
        pylint --rcfile=.pylintrc --ignore=mocks $(git ls-files '*.py')
        
    - name: Test with pytest
      run: |
        pytest test_rootsignal.py -v --cov=. --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true 